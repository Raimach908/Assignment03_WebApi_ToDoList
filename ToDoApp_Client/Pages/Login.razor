@page "/login"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<div class="auth-container">
    <div class="auth-card">
        <h2 class="text-center">Login</h2>
        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="email">Email</label>
                <InputText id="email" class="form-control form-control-sm" @bind-Value="loginModel.Email" placeholder="Enter your email" required />
            </div>
            <div class="mb-3">
                <label for="password">Password</label>
                <InputText id="password" class="form-control form-control-sm" @bind-Value="loginModel.Password" InputType="password" placeholder="Enter your password" required />
            </div>
            <button class="btn btn-primary btn-sm w-100" type="submit">Login</button>
        </EditForm>

        <p class="text-danger mt-3">@errorMessage</p>
        <p class="text-center mt-3">
            Don't have an account? <a href="/signup" class="text-primary">Sign Up</a>
        </p>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        try
        {
            Console.WriteLine("Sending login request...");
            var response = await Http.PostAsJsonAsync("/api/auth/login", loginModel);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
                if (result != null && !string.IsNullOrEmpty(result.Token))
                {
                    Console.WriteLine("Login successful. Token received.");
                    await LocalStorage.SetItemAsync("authToken", result.Token);
                    NavigationManager.NavigateTo("/");
                }
                else
                {
                    errorMessage = "Login failed. Token not received.";
                }
            }
            else
            {
                errorMessage = "Invalid email or password.";
                Console.WriteLine($"Error: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred while logging in.";
            Console.WriteLine($"Exception: {ex.Message}");
        }
    }

    public class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    public class LoginResponse
    {
        public string Token { get; set; } = string.Empty;
    }
}
